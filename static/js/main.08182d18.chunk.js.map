{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toogleMode","htmlFor","Textform","useState","text","setText","style","backgroundColor","color","header","value","onChange","event","target","rows","fontSize","class","role","upText","toUpperCase","toLowerCase","navigator","clipboard","writeText","length","split","defaultProps","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4LAKe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,sBAAsB,gBAAc,qBAAqB,gBAAc,QAAQ,aAAW,oBAApL,SACI,sBAAMJ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,qBAA7C,SACI,qBAAKL,UAAU,aAAf,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAIR,sBAAKF,UAAU,yBAAf,UACI,uBAAOA,UAAU,oBAAoBI,KAAK,WAAWC,GAAG,yBAAyBC,QAASP,EAAMQ,aAChG,wBAAOC,QAAQ,yBAAyBR,UAAS,eAAyB,UAAfD,EAAME,KAAmB,OAAS,SAA7F,oBAA+H,UAAfF,EAAME,KAAmB,OAAS,QAAlJ,oBClBL,SAASQ,EAASV,GAC7B,MAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,OACI,mCACI,sBAAKZ,UAAU,iBAAiBa,MAAO,CAAEC,gBAA+B,SAAdf,EAAME,KAAkB,QAAU,UAAWc,MAAqB,SAAdhB,EAAME,KAAkB,UAAU,SAAhJ,UACI,oBAAID,UAAU,YAAd,SAA2BD,EAAMiB,SACjC,qBAAKhB,UAAU,OAAf,SACI,0BAAUA,UAAS,eAAkBK,GAAG,YAAYY,MAAON,EAAMO,SA3B1D,SAACC,GACpBP,EAAQO,EAAMC,OAAOH,QA0BkFI,KAAK,IAAIR,MAAO,CAACC,gBAA+B,SAAdf,EAAME,KAAkB,QAAU,UAAUc,MAAoB,SAAdhB,EAAME,KAAkB,UAAY,QAAQqB,SAAS,YAExO,sBAAKC,MAAM,YAAYC,KAAK,QAAQ,aAAW,yBAA/C,UACI,wBAAQxB,UAAU,sBAAsBM,QA3BzC,WACX,IAAImB,EAASd,EAAKe,cAClBd,EAAQa,IAyBI,yBACA,wBAAQzB,UAAU,sBAAsBM,QAxBxC,WACZ,IAAImB,EAASd,EAAKgB,cAClBf,EAAQa,IAsBI,yBACA,wBAAQzB,UAAU,sBAAsBM,QAjBvC,WACbsB,UAAUC,UAAUC,UAAUnB,IAgBlB,mBACA,wBAAQX,UAAU,sBAAsBM,QAtBtC,WAEdM,EADgB,MAqBJ,uBAEJ,oBAAIZ,UAAU,WAAd,0BACA,kCAAI,6CAAJ,IAAyBW,EAAKoB,UAC9B,kCAAI,4CAAJ,IAAwBpB,EAAKqB,MAAM,KAAKD,OAAS,UDfjEjC,EAAOmC,aAAa,CAChB9B,MAAM,cEcK+B,MApCf,WACE,MAAqBxB,mBAAS,SAA9B,mBAAOT,EAAP,KAAYkC,EAAZ,KAWA,OACE,qCAEI,cAACrC,EAAD,CAAQK,MAAM,WAAWF,KAAMA,EAAMM,WAb5B,WACH,UAAPN,GACDkC,EAAQ,QACRC,SAASC,KAAKxB,MAAMC,gBAAgB,YAEpCqB,EAAQ,SACRC,SAASC,KAAKxB,MAAMC,gBAAgB,WAW5B,cAACL,EAAD,CAAUO,OAAO,kBAAkBf,KAAMA,QCjBxCqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.08182d18.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"form-check form-switch\" >\r\n                    <input className=\"form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleMode} />\r\n                    <label htmlFor=\"flexSwitchCheckDefault\" className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>Enable {props.mode === 'light' ? 'Dark' : 'Light'} Mode </label>              \r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:\"Your Title\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"Your Text\");\r\n\r\n\r\n    //handle functions\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const UpCase = () => {\r\n        let upText = text.toUpperCase();\r\n        setText(upText);\r\n    }\r\n    const LowCase = () => {\r\n        let upText = text.toLowerCase();\r\n        setText(upText);\r\n    }\r\n    const ClearCase = () => {\r\n        let clearText = \" \";\r\n        setText(clearText);\r\n    }\r\n    const CopyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{ backgroundColor: props.mode == 'light' ? \"white\" : \"#475663\", color: props.mode == 'light' ? \"#475663\":\"white\"}}>\r\n                <h2 className=\"centertxt\">{props.header}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className={`form-control`} id=\"Textarea1\" value={text} onChange={handleOnChange} rows=\"8\" style={{backgroundColor: props.mode == 'light' ? \"white\" : \"#60778a\",color:props.mode == 'light' ? \"#616161\" : \"white\",fontSize:\"20px\"}}></textarea>\r\n                </div>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-danger mx-2\" onClick={UpCase}> Upeer Case</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={LowCase}> Lower Case</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={CopyText}> Copy</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={ClearCase}> Clear</button>\r\n                </div>\r\n                <h3 className=\"p-2 mt-2\">Text Summary</h3>\r\n                <p> <b>Charchaters:</b> {text.length}</p>\r\n                <p> <b>Word Count:</b> {text.split(\" \").length - 1}</p>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\n// import {BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const modeSwap=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#475663\"\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor=\"#fff\"\n    }\n\n  }\n  return (\n    <>      \n      {/* <Router> */}\n        <Navbar title=\"TextUtil\" mode={mode} toogleMode={modeSwap} />\n        {/* <Switch>\n          <Route exact path=\"/\"> */}\n              \n              <Textform header=\"Enter Your Text\" mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n              \n              {/* <About title=\"About Page\"  mode={mode}/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/contact\"> */}\n              \n              {/* <Contact title=\"Contact Page\" mode={mode} /> */}\n          {/* </Route> */}\n        {/* </Switch> */}\n      {/* </Router> */}\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}