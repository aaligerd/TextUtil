{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toogleMode","htmlFor","Textform","useState","text","setText","style","backgroundColor","color","header","value","onChange","event","target","rows","fontSize","class","role","upText","toUpperCase","toLowerCase","navigator","clipboard","writeText","length","split","About","defaultProps","App","setMode","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dca7fe4b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/#/about\">About</Link>\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"form-check form-switch\" >\r\n                    <input className=\"form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleMode} />\r\n                    <label htmlFor=\"flexSwitchCheckDefault\" className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>Enable {props.mode === 'light' ? 'Dark' : 'Light'} Mode </label>              \r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:\"Your Title\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"Your Text\");\r\n\r\n\r\n    //handle functions\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const UpCase = () => {\r\n        let upText = text.toUpperCase();\r\n        setText(upText);\r\n    }\r\n    const LowCase = () => {\r\n        let upText = text.toLowerCase();\r\n        setText(upText);\r\n    }\r\n    const ClearCase = () => {\r\n        let clearText = \" \";\r\n        setText(clearText);\r\n    }\r\n    const CopyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{ backgroundColor: props.mode == 'light' ? \"white\" : \"#475663\", color: props.mode == 'light' ? \"#475663\":\"white\"}}>\r\n                <h2 className=\"centertxt\">{props.header}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className={`form-control`} id=\"Textarea1\" value={text} onChange={handleOnChange} rows=\"8\" style={{backgroundColor: props.mode == 'light' ? \"white\" : \"#60778a\",color:props.mode == 'light' ? \"#616161\" : \"white\",fontSize:\"20px\"}}></textarea>\r\n                </div>\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n                    <button className=\"btn btn-danger mx-2\" onClick={UpCase}> Upeer Case</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={LowCase}> Lower Case</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={CopyText}> Copy</button>\r\n                    <button className=\"btn btn-danger mx-2\" onClick={ClearCase}> Clear</button>\r\n                </div>\r\n                <h3 className=\"p-2 mt-2\">Text Summary</h3>\r\n                <p> <b>Charchaters:</b> {text.length}</p>\r\n                <p> <b>Word Count:</b> {text.split(\" \").length - 1}</p>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    const [btnclass,setBtnClass]=useState('btn btn-light');\r\n    const [btntxt,setBtnText]=useState('Dark Mode');\r\n    const [colourtoogle,setColor]=useState({color:'black',\r\n    backgroundColor:'white'});\r\n\r\n    const radioStyle={\r\n        float:'right',\r\n        marginRight:'10px'\r\n    }\r\n    const toogleBackground=()=>{\r\n        if(btntxt=='Dark Mode'){\r\n            setColor({\r\n                color:'white',\r\n                backgroundColor:'#363636'\r\n            });\r\n            setBtnText('Light Mode');\r\n            setBtnClass('btn btn-light');\r\n        }else{\r\n            setColor({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            });\r\n            setBtnText('Dark Mode');\r\n            setBtnClass('btn btn-dark');\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"containerfluid\">\r\n            <div className=\"container\">\r\n                <div className=\"accordion\" id=\"accordionExample\" >\r\n                    <h1 className=\"my-3\" style={{color:props.mode==\"light\"?'black':'white'}}>{props.title}</h1>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\"}}>\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\",color:props.mode=='light'?'black':\"white\",fontSize:\"25px\"}}>\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\"}}>\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\",color:props.mode=='light'?'black':\"white\",fontSize:\"25px\"}}>\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\"}}>\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={{backgroundColor:props.mode=='light'?\"white\":\"#60778a\",color:props.mode=='light'?'black':\"white\",fontSize:\"25px\"}}>\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\nimport {BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const modeSwap=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#475663\"\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor=\"#fff\"\n    }\n\n  }\n  return (\n    <>      \n      <Router>\n        <Navbar title=\"TextUtil\" mode={mode} toogleMode={modeSwap} />\n        <Switch>\n          <Route exact path=\"/\">              \n              <Textform header=\"Enter Your Text\" mode={mode}/>\n          </Route>\n          <Route exact path=\"/about\">              \n              <About title=\"About Page\"  mode={mode}/>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode history={history}>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}